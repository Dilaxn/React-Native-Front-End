{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dilaxn/Desktop/untitled folder/React-Native-Front-End/src/screens/RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport axios from \"axios\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { getLogColor } from \"react-native/Libraries/LogBox/UI/LogBoxStyle\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password1 = _useState4[0],\n      setPassword1 = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password2 = _useState6[0],\n      setPassword2 = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var password1Error = passwordValidator(password1.value);\n    var password2Error = passwordValidator(password2.value);\n\n    if (password1Error || password2Error) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setPassword1(_objectSpread(_objectSpread({}, password1), {}, {\n        error: password1Error\n      }));\n      setPassword2(_objectSpread(_objectSpread({}, password2), {}, {\n        error: password2Error\n      }));\n      return;\n    }\n\n    var x = name.value.split(\":\");\n    var urll = \"http://localhost:3001/users/\" + x[1] + \"/reset_password/\" + x[0];\n    console.log(urll);\n    var options = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (password1.value === password2.value) {\n      var body = {\n        password: password1.value\n      };\n      axios.patch(urll, body, options).then(function (response) {\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'LoginScreen'\n          }]\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    } else {\n      console.log(\"err\");\n      Alert.alert(\"Enter same passwords to two fields\");\n    }\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"), React.createElement(TextInput, {\n    label: \"Verification Code\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password1.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword1({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password1.error,\n    errorText: password1.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Verify Password\",\n    returnKeyType: \"done\",\n    value: password2.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword2({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password2.error,\n    errorText: password2.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onSignUpPressed,\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Reset\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/Users/dilaxn/Desktop/untitled folder/React-Native-Front-End/src/screens/RegisterScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","axios","getLogColor","RegisterScreen","navigation","value","error","name","setName","password1","setPassword1","password2","setPassword2","onSignUpPressed","nameError","password1Error","password2Error","x","split","urll","console","log","options","headers","body","password","patch","then","response","reset","index","routes","catch","alert","Alert","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React, {useState} from 'react'\nimport {View, StyleSheet, TouchableOpacity} from 'react-native'\nimport {Text} from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport {theme} from '../core/theme'\nimport {emailValidator} from '../helpers/emailValidator'\nimport {passwordValidator} from '../helpers/passwordValidator'\nimport {nameValidator} from '../helpers/nameValidator'\nimport axios from \"axios\";\nimport {Alert} from \"react-native-web\";\nimport {getLogColor} from \"react-native/Libraries/LogBox/UI/LogBoxStyle\";\n\nexport default function RegisterScreen({navigation}) {\n    const [name, setName] = useState({value: '', error: ''})\n    // const [email, setEmail] = useState({value: '', error: ''})\n    const [password1, setPassword1] = useState({value: '', error: ''})\n    const [password2, setPassword2] = useState({value: '', error: ''})\n\n    const onSignUpPressed = () => {\n        const nameError = nameValidator(name.value)\n        // const emailError = emailValidator(email.value)\n        const password1Error = passwordValidator(password1.value)\n        const password2Error = passwordValidator(password2.value)\n\n        if (password1Error || password2Error) {\n            setName({...name, error: nameError})\n            // setEmail({ ...email, error: emailError })\n            setPassword1({...password1, error: password1Error})\n            setPassword2({...password2, error: password2Error})\n            return\n        }\n\n        let x = name.value.split(\":\")\n\n        const urll = \"http://localhost:3001/users/\" + x[1] + \"/reset_password/\" + x[0];\n        console.log(urll)\n        const options = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        if(password1.value===password2.value) {\n            const body = {password: password1.value}\n            axios.patch(urll, body, options)\n                .then((response) => {\n                    navigation.reset({\n                        index: 0,\n                        routes: [{name: 'LoginScreen'}],\n                    })\n                })\n                .catch((error) => {\n                    alert(error)\n                })\n\n        }\n        else{\n            console.log(\"err\")\n            Alert.alert(`Enter same passwords to two fields`)\n        }\n    }\n\n    return (\n        <Background>\n            <BackButton goBack={navigation.goBack}/>\n            <Logo/>\n            <Header>Reset Password</Header>\n            <TextInput\n                label=\"Verification Code\"\n                returnKeyType=\"next\"\n                value={name.value}\n                onChangeText={(text) => setName({value: text, error: ''})}\n                error={!!name.error}\n                errorText={name.error}\n            />\n            <TextInput\n                label=\"Password\"\n                returnKeyType=\"done\"\n                value={password1.value}\n                onChangeText={(text) => setPassword1({value: text, error: ''})}\n                error={!!password1.error}\n                errorText={password1.error}\n                secureTextEntry\n            />\n            <TextInput\n                label=\"Verify Password\"\n                returnKeyType=\"done\"\n                value={password2.value}\n                onChangeText={(text) => setPassword2({value: text, error: ''})}\n                error={!!password2.error}\n                errorText={password2.error}\n                secureTextEntry\n            />\n            <Button\n                mode=\"contained\"\n                onPress={onSignUpPressed}\n                style={{marginTop: 24}}\n            >\n                Reset\n            </Button>\n            <View style={styles.row}>\n                <Text>Already have an account? </Text>\n                <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n                    <Text style={styles.link}>Login</Text>\n                </TouchableOpacity>\n            </View>\n        </Background>\n    )\n}\n\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        marginTop: 4,\n    },\n    link: {\n        fontWeight: 'bold',\n        color: theme.colors.primary,\n    },\n})\n"]},"metadata":{},"sourceType":"module"}